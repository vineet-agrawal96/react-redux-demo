{"version":3,"sources":["reducers/reducer.js","reducers/actionTypes.js","App.js","index.js"],"names":["intialState","test","rootReducers","combineReducers","reducers","state","arguments","length","undefined","action","type","Object","objectSpread2","data","App","_useState","useState","width","window","innerWidth","height","innerHeight","_useState2","slicedToArray","pageSize","setPageSize","onResize","useEffect","addEventListener","removeEventListener","react_default","a","createElement","className","index_es","image","onSelect","selectedId","console","log","onChange","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","rootElement","document","getElementById","ReactDOM","render","StrictMode","es","App_App"],"mappings":"oNAGMA,EAAc,CAClBC,KAAM,IAkBOC,EAJMC,YAAgB,CACnCC,SAZe,WAAiC,IAAhCC,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBN,EAAaS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAOC,MACb,ICTuB,cDWrB,OADAL,EAAKM,OAAAC,EAAA,EAAAD,CAAA,GAAQN,EAAR,CAAeJ,KAAMQ,EAAOI,OAGnC,QACE,OAAOR,qBERAS,SAAM,WAAM,IAAAC,EACSC,mBAAS,CACvCC,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,cAHMC,EAAAX,OAAAY,EAAA,EAAAZ,CAAAI,EAAA,GAChBS,EADgBF,EAAA,GACNG,EADMH,EAAA,GAKjBI,EAAW,WACfD,EAAY,CAAER,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,eAGzDM,oBAAU,WAER,OADAT,OAAOU,iBAAiB,SAAUF,GAC3B,kBAAMR,OAAOW,oBAAoB,SAAUH,KACjD,IAKH,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,MAAM,6CACNC,SAPW,SAAAC,GAAU,OAAIC,QAAQC,IAAIF,IAQrCG,SAPW,SAAA3B,GAAI,OAAIyB,QAAQC,IAAI1B,IAQ/BI,MAAOO,EAASP,MAChBG,OAAQI,EAASJ,YCvBnBqB,EAAQC,YACZxC,EACAgB,OAAOyB,8BAAgCzB,OAAOyB,gCAG1CC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPlB,EAAAC,EAAAC,cAACF,EAAAC,EAAMkB,WAAP,KACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAUT,MAAOA,GACfX,EAAAC,EAAAC,cAACmB,EAAD,QAGJP","file":"static/js/main.ef3bd761.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { TEST_ACTION } from \"./actionTypes\";\r\n\r\nconst intialState = {\r\n  test: \"\"\r\n};\r\n\r\nconst reducers = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case TEST_ACTION:\r\n      state = { ...state, test: action.data };\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rootReducers = combineReducers({\r\n  reducers\r\n});\r\n\r\nexport default rootReducers;\r\n","export const TEST_ACTION = \"TEST_ACTION\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ReactPictureAnnotation } from \"react-picture-annotation\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport const App = () => {\r\n  const [pageSize, setPageSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight\r\n  });\r\n  const onResize = () => {\r\n    setPageSize({ width: window.innerWidth, height: window.innerHeight });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", onResize);\r\n    return () => window.removeEventListener(\"resize\", onResize);\r\n  }, []);\r\n\r\n  const onSelect = selectedId => console.log(selectedId);\r\n  const onChange = data => console.log(data);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ReactPictureAnnotation\r\n        image=\"https://source.unsplash.com/random/800x600\"\r\n        onSelect={onSelect}\r\n        onChange={onChange}\r\n        width={pageSize.width}\r\n        height={pageSize.height}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import { Switch, Route, BrowserRouter, Link } from 'react-router-dom';\r\n// import { BuilderComponent, builder } from '@builder.io/react';\r\n\r\n// import './index.css';\r\n\r\n// builder.init(\"aae385ca9d674c028b3b43fd2ff7922c\")\r\n\r\n// export default function App() {\r\n//   return (\r\n//     <BrowserRouter>\r\n//       <header>\r\n//         <div className=\"logo\">MY SITE</div>\r\n//         <div className=\"links\">\r\n//           <Link className=\"link\" to=\"/\">Home</Link>\r\n//           <Link className=\"link\" to=\"/about\">About</Link>\r\n//           <Link className=\"link\" to=\"/page-1\">Page 1</Link>\r\n//           <Link className=\"link\" to=\"/page-2\">Page 2</Link>\r\n//           <Link className=\"link\" to=\"/404\">404</Link>\r\n//         </div>\r\n//       </header>\r\n//       <div className=\"App\">\r\n//         <Switch>\r\n//           <Route path=\"/\" exact component={Home} />\r\n//           <Route path=\"/about\" exact component={About} />\r\n//           <Route render={({ location }) => <CatchallPage key={location.key} />} />\r\n//         </Switch>\r\n//       </div>\r\n//     </BrowserRouter>\r\n//   );\r\n// }\r\n\r\n// class CatchallPage extends React.Component {\r\n//   state = { notFound: false };\r\n\r\n//   render() {\r\n//     return !this.state.notFound ? (\r\n//       <BuilderComponent\r\n//         model=\"first-home-page\"\r\n//         contentLoaded={content => {\r\n//           if (!content) {\r\n//             this.setState({ notFound: true });\r\n//           }\r\n//         }}\r\n//       >\r\n//         <div className=\"loading\">Loading...</div>\r\n//       </BuilderComponent>\r\n//     ) : (\r\n//       <NotFound /> // Your 404 content\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const Home = () => <h1>I am the homepage!</h1>;\r\n// const About = () => <h1>I am the about page!</h1>;\r\n// const NotFound = () => <h1>No page found for this URL, did you publish it?</h1>;\r\n\r\n// // const rootElement = document.getElementById('root');\r\n// // ReactDOM.render(<App />, rootElement);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducers from \"./reducers/reducer\";\r\nimport {App} from \"./App\";\r\n\r\nconst store = createStore(\r\n  rootReducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}